-- 1 task

-- Сделать запрос для получения атрибутов из указанных таблиц, применив фильтры по указанным условиям:
-- Таблицы: Н_ЛЮДИ, Н_СЕССИЯ.
-- Вывести атрибуты: Н_ЛЮДИ.ФАМИЛИЯ, Н_СЕССИЯ.ДАТА.
-- Фильтры (AND):
-- a) Н_ЛЮДИ.ИД < 100012.
-- b) Н_СЕССИЯ.ИД < 14369.
-- c) Н_СЕССИЯ.ИД = 27640.
-- Вид соединения: RIGHT JOIN.

SELECT "Н_ЛЮДИ"."ФАМИЛИЯ", "Н_СЕССИЯ"."ДАТА" FROM "Н_ЛЮДИ"
    RIGHT JOIN "Н_СЕССИЯ" ON "Н_ЛЮДИ"."ИД"="Н_СЕССИЯ"."ЧЛВК_ИД"
    WHERE "Н_ЛЮДИ"."ИД" < 100012 AND "Н_СЕССИЯ"."ИД" < 14369 AND "Н_СЕССИЯ"."ИД" = 27650;

-- для тестов:
--     WHERE "Н_ЛЮДИ"."ИД" < 100032 AND "Н_СЕССИЯ"."ИД" < 14369;
-- SELECT * FROM "Н_ЛЮДИ" WHERE "ИД" < 100012;


-- 2 task

-- Сделать запрос для получения атрибутов из указанных таблиц, применив фильтры по указанным условиям:
-- Таблицы: Н_ЛЮДИ, Н_ВЕДОМОСТИ, Н_СЕССИЯ.
-- Вывести атрибуты: Н_ЛЮДИ.ИД, Н_ВЕДОМОСТИ.ИД, Н_СЕССИЯ.ЧЛВК_ИД.
-- Фильтры (AND):
-- a) Н_ЛЮДИ.ИД < 100012.
-- b) Н_ВЕДОМОСТИ.ИД = 39921.
-- Вид соединения: LEFT JOIN.

SELECT "Н_ЛЮДИ"."ИД", "Н_ВЕДОМОСТИ"."ИД", "Н_СЕССИЯ"."ЧЛВК_ИД" FROM "Н_ЛЮДИ"
    LEFT JOIN "Н_ВЕДОМОСТИ" ON "Н_ЛЮДИ"."ИД" = "Н_ВЕДОМОСТИ"."ЧЛВК_ИД"
    LEFT JOIN "Н_СЕССИЯ" ON "Н_ЛЮДИ"."ИД" = "Н_СЕССИЯ"."ЧЛВК_ИД"
--     WHERE "Н_ЛЮДИ"."ИД" < 100012 AND "Н_ВЕДОМОСТИ"."ИД" = 39921;

-- для тестов
    WHERE "Н_ЛЮДИ"."ИД" < 200012 AND "Н_ВЕДОМОСТИ"."ИД" = 39921;
-- SELECT * FROM "Н_ЛЮДИ" WHERE "ИД" < 100012;

-- проверка:
-- SELECT * FROM "Н_СЕССИЯ" WHERE "ЧЛВК_ИД" = 118015;


-- 3 task

-- Вывести число имен без учета повторений.
-- При составлении запроса нельзя использовать DISTINCT.

SELECT count(*) FROM (
    SELECT 1 FROM "Н_ЛЮДИ" GROUP BY "Н_ЛЮДИ"."ИМЯ"
                     ) AS TEMP_TABLE;

-- проверка:
-- SELECT COUNT(DISTINCT "Н_ЛЮДИ"."ИМЯ") FROM "Н_ЛЮДИ";


-- task 4

-- Найти группы, в которых в 2011 году было ровно 10 обучающихся студентов на ФКТИУ.
-- Для реализации использовать подзапрос.

SELECT "ГРУППА" FROM "Н_УЧЕНИКИ"
    WHERE (EXTRACT(YEAR FROM "НАЧАЛО") = 2011 OR EXTRACT(YEAR FROM "КОНЕЦ") = 2011)
    AND "СОСТОЯНИЕ" = 'утвержден'
    AND "ПЛАН_ИД" IN (
    SELECT "Н_ПЛАНЫ"."ИД" FROM "Н_ПЛАНЫ" WHERE "Н_ПЛАНЫ"."ОТД_ИД" = 703
    ) GROUP BY "ГРУППА" HAVING count(*) = 10;


-- task 5

-- Выведите таблицу со средними оценками студентов группы 4100 (Номер, ФИО, Ср_оценка),
-- у которых средняя оценка не больше средней оценк(е|и) в группе 1100.

SELECT "Н_ЛЮДИ"."ИД", "Н_ЛЮДИ"."ФАМИЛИЯ", "Н_ЛЮДИ"."ИМЯ", "Н_ЛЮДИ"."ОТЧЕСТВО", avg(cast("Н_ВЕДОМОСТИ"."ОЦЕНКА" AS int))
    FROM "Н_УЧЕНИКИ"
    JOIN "Н_ВЕДОМОСТИ" on "Н_УЧЕНИКИ"."ИД" = "Н_ВЕДОМОСТИ"."ИД"
    JOIN "Н_ЛЮДИ" on "Н_УЧЕНИКИ"."ЧЛВК_ИД" = "Н_ЛЮДИ"."ИД"
    WHERE "ГРУППА" = '4100' AND "ОЦЕНКА" IN ('2', '3', '4', '5')
    GROUP BY "Н_ЛЮДИ"."ИД", "Н_ЛЮДИ"."ФАМИЛИЯ", "Н_ЛЮДИ"."ИМЯ", "Н_ЛЮДИ"."ОТЧЕСТВО"
    HAVING avg(cast("Н_ВЕДОМОСТИ"."ОЦЕНКА" AS int)) <= (
        SELECT avg(cast("Н_ВЕДОМОСТИ"."ОЦЕНКА" AS int))
            FROM "Н_УЧЕНИКИ"
            JOIN "Н_ВЕДОМОСТИ" on "Н_УЧЕНИКИ"."ИД" = "Н_ВЕДОМОСТИ"."ИД"
            WHERE "ГРУППА" = '1100' AND "ОЦЕНКА" IN ('2', '3', '4', '5')
        );



-- task 6

-- Получить список студентов, отчисленных до первого сентября 2012 года с очной формы обучения (специальность: 230101). В результат включить:
-- номер группы;
-- номер, фамилию, имя и отчество студента;
-- номер пункта приказа;
-- Для реализации использовать подзапрос с EXISTS.

SELECT "Н_УЧЕНИКИ"."ГРУППА", "Н_ЛЮДИ"."ИД", "Н_ЛЮДИ"."ФАМИЛИЯ", "Н_ЛЮДИ"."ИМЯ", "Н_ЛЮДИ"."ОТЧЕСТВО", "Н_УЧЕНИКИ"."П_ПРКОК_ИД"
    FROM "Н_УЧЕНИКИ"
    JOIN "Н_ЛЮДИ" on "Н_УЧЕНИКИ"."ЧЛВК_ИД" = "Н_ЛЮДИ"."ИД"
    WHERE "ПРИЗНАК" = 'отчисл'
    AND "КОНЕЦ" < '2012-09-01'
    AND EXISTS (
        SELECT 1 FROM "Н_ПЛАНЫ"
            WHERE "Н_УЧЕНИКИ"."ПЛАН_ИД" = "Н_ПЛАНЫ"."ИД"
            AND "Н_ПЛАНЫ"."ФО_ИД" = 1
            AND "Н_ПЛАНЫ"."НАПС_ИД" = 2700
        );


-- 7 task

-- Вывести список людей, не являющихся или не являвшихся студентами СПбГУ ИТМО (данные,
-- о которых отсутствуют в таблице Н_УЧЕНИКИ). В запросе нельзя использовать DISTINCT.

SELECT * FROM "Н_ЛЮДИ" WHERE NOT EXISTS (
    SELECT 1 FROM "Н_УЧЕНИКИ" WHERE "Н_УЧЕНИКИ"."ЧЛВК_ИД" = "Н_ЛЮДИ"."ИД"
);
